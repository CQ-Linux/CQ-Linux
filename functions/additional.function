#additional software to install with build-a-pi
#20200513 km4ack

TEMPCRON=${MYPATH}/cron.tmp
DIR=${MYPATH}/temp
WHO=$(whoami)
mkdir -p ${DIR}
BUILDDIR=$HOME/.bap-source-files
mkdir -p ${BUILDDIR}

source ${MYPATH}/config


##################################
#	CONKY
##################################
CONKY() {
	if ! hash conky 2>/dev/null; then
		sudo apt install -y conky
	fi
	touch ${HOME}/Documents/mylog.txt  #conky will fail to load if this file doesn't exist
	touch /var/lib/misc/dnsmasq.leases #conky will fail to load if this file doesn't exist
	sudo apt-get install -y ruby2.7
	sudo gem install gpsd_client
	sudo gem install maidenhead
	cp ${MYPATH}/conky/.conkyrc ${HOME}/.conkyrc
	mkdir -p ${HOME}/bin/conky
	cp ${MYPATH}/conky/* ${HOME}/bin/conky/
	chmod +x ${HOME}/bin/conky/get-grid ${HOME}/bin/conky/temp-conv ${HOME}/bin/conky/get-freq ${HOME}/bin/conky/grid
	sed -i "s/N0CALL/${CALL}/" ${HOME}/.conkyrc
	#Line below is for https://github.com/km4ack/pi-build/issues/198
	echo "#Update GPS maidenhead for conky" >>${TEMPCRON}
	echo "*/1 * * * * /home/`whoami`/bin/conky/grid" >>${TEMPCRON}

	#Create files needed for autostart at login
	#Fix issue https://github.com/km4ack/pi-build/issues/83

	cat <<EOF >${HOME}/.local/share/applications/conky.desktop
[Desktop Entry]
Name=Conky
Comment=Conky
GenericName=Conky Screen Background Monitor
Exec=conky --pause=5
Icon=/home/`whoami`/pi-build/conky/conky-logo.png
Type=Application
Encoding=UTF-8
Terminal=false
Categories=hamutilities
Keywords=Radio
EOF

	ln -sf ${HOME}/.local/share/applications/conky.desktop ${HOME}/.config/autostart/conky.desktop

	#####Add setconky to main menu
	chmod +x ${HOME}/pi-build/conky/setconky

	cat <<EOF >${HOME}/.local/share/applications/setconky.desktop
[Desktop Entry]
Name=Conky-Prefs
Comment=Conky-Prefs
GenericName=Change Conky Preferences
Exec=/home/`whoami`/pi-build/conky/setconky
Icon=/home/`whoami`/pi-build/conky/conky-logo.png
Type=Application
Encoding=UTF-8
Terminal=false
Categories=Settings;DesktopSettings;GTK;X-LXDE-Settings;
Keywords=Radio,Conky
EOF

}

##################################
#	CHIRP
##################################
CHIRP() {

sudo apt install -y chirp

OLDCODE(){
	#left for reference
	cd ${DIR} || return
	wget --tries 2 --connect-timeout=60 https://trac.chirp.danplanet.com/chirp_daily/LATEST/
	CHIRPBUILD=$(cat index.html | grep .tar.gz | grep chirp-daily- | awk '{ print $6 }' | sed 's/.*"//' | sed 's/>//' | sed 's/[<].*$//')
	sudo apt-get -y install python-gtk2 python-serial python-libxml2 python-suds
	mkdir ${HOME}/chirp
	cd ${HOME}/chirp || return
	wget --tries 2 --connect-timeout=60 https://trac.chirp.danplanet.com/chirp_daily/LATEST/$CHIRPBUILD
	tar -xzf $CHIRPBUILD
	CHIRPDIR=$(echo $CHIRPBUILD | sed 's/[.].*$//')
	cd $CHIRPDIR || return
	sudo python setup.py install
	pip install future
}
}

##################################
#	GARIM
##################################
GARIM() {
	GPKG=$(curl -s https://www.whitemesa.net/garim/src/ | grep tar.gz | tail -1 | sed 's/^.*garim/garim/' | sed 's/tar.gz.*$/tar.gz/')
	cd ${BUILDDIR} || return
	wget --tries 2 --connect-timeout=60 https://www.whitemesa.net/garim/src/$GPKG
	tar -xzvf $GPKG
	DIRR=$(echo $GPKG | sed 's/.tar.gz//')
	cd ${DIRR} || return
	./configure
	make
	sudo make install
	sudo make clean
	cd ${BUILDDIR} || return
	rm *.gz
}


##################################
#	PROPAGATION
##################################
PROPAGATION() {
	sudo apt-get install -y gfortran yelp python3-gi python3-gi-cairo rarian-compat gnome-doc-utils pkg-config python3-dateutil python3-mpltoolkits.basemap python3-cairocffi libgtk-3-dev

	#install primary program
	cd ${BUILDDIR} || return
	wget --tries 2 --connect-timeout=60 https://www.qsl.net/hz1jw/voacapl/downloads/voacapl-0.7.2.tar.gz
	tar -xzf voacapl-0.7.2.tar.gz
	cd voacapl-0.7.2 || return
	./configure
	make
	sudo make install
	sudo make clean

	#install gui app for propagation reports
	cd ${BUILDDIR}
	wget --tries 2 --connect-timeout=60 https://www.qsl.net/hz1jw/pythonprop/downloads/pythonprop-0.28.tar.gz
	tar -xzf pythonprop-0.28.tar.gz
	cd pythonprop-0.28
	./configure
	sudo make install
	sudo make clean
	${BUILDDIR}/voacapl-0.7.2/makeitshfbc
}


##################################
#	HamClock Small
##################################
SMALL() {
	sudo apt-get -y install make g++ libx11-dev
	cd ${DIR} || return
	curl -o ESPHamClock.zip http://www.clearskyinstitute.com/ham/HamClock/ESPHamClock.zip
	unzip ESPHamClock.zip
	rm ESPHamClock.zip
	cd ESPHamClock || return
	sudo make -j 4 hamclock-800x480
	sudo chmod +s hamclock-800x480
	sudo mv hamclock-800x480 /usr/local/bin/hamclock
	rm -rf "${DIR}/ESPHamClock"

	cat >${HOME}/Downloads/hamclock.desktop <<EOF
[Desktop Entry]
Name=HamClock
GenericName=Ham Clock
Comment=Ham Clock
Exec=hamclock
Icon=/usr/share/icons/Adwaita/scalable/apps/preferences-system-time-symbolic.svg
Terminal=false
Type=Application
Categories=HamRadio;
EOF

	sudo mv ${HOME}/Downloads/hamclock.desktop /usr/share/applications/
}

##################################
#	HamClock Large
##################################
LARGE() {
	sudo apt-get -y install make g++ libx11-dev
	cd ${DIR} || return
	curl -o ESPHamClock.zip http://www.clearskyinstitute.com/ham/HamClock/ESPHamClock.zip
	unzip ESPHamClock.zip
	rm ESPHamClock.zip
	cd ESPHamClock || return
	sudo make -j 4 hamclock-1600x960
	sudo chmod +s hamclock-1600x960
	sudo mv hamclock-1600x960 /usr/local/bin/hamclock
	rm -rf "${DIR}/ESPHamClock"

	cat >${HOME}/Downloads/hamclock.desktop <<EOF
[Desktop Entry]
Name=HamClock
GenericName=Ham Clock
Comment=Ham Clock
Exec=hamclock
Icon=/usr/share/icons/Adwaita/scalable/apps/preferences-system-time-symbolic.svg
Terminal=false
Type=Application
Categories=HamRadio;
EOF

	sudo mv ${HOME}/Downloads/hamclock.desktop /usr/share/applications/
}

##################################
#	Gpredict
##################################
GPREDICT() {
	sudo apt install -y gpredict

}


##################################
#	Grid-Calc
##################################
GRIDCALC(){
	sudo apt install -y wwl bc
	cd $HOME/bin
	wget https://raw.githubusercontent.com/km4ack/pi-scripts/master/grid-calc
	chmod +x $HOME/bin/grid-calc
	$HOME/bin/grid-calc
}



##################################
#	DIGI pi install W1BAW
##################################
DIGIPI() {
	echo "##################"
	echo "installing DIGIpi"
	echo "##################"
	git clone https://github.com/bwattendorf/digipi_x86.git \
    $HOME/digipi && sudo bash $HOME/digipi/digipi
}

##################################
#	QDMR install W1BAW
##################################
QDMR() {
	#https://kd9cpb.com/qdmr
	echo "##################"
	echo "installing QDMR"
	echo "##################"
	sudo apt-get install -y build-essential cmake  
	sudo apt-get install -y libusb-1.0-0-dev qtbase5-dev qttools5-dev qttools5-dev-tools qtpositioning5-dev libqt5serialport5-dev libyaml-cpp-dev
	cd /tmp || return
	git clone https://github.com/hmatuschek/qdmr.git
	cd qdmr || return
	mkdir -p build
	cd build || return
	sudo cmake .. -DCMAKE_INSTALL_PREFIX=/usr/
	sudo make || return
	sudo make install || return
	sudo rm -rf /tmp/qdmr
	
	#create menu item and download icon	
cat >${HOME}/Downloads/qdmr.desktop <<EOF
	[Desktop Entry]
	Name=QDMR
	Comment=A universal code-plug programming software for DMR radios.
	Exec=qdmr
	Icon=qdmr.png
	Terminal=false
	Type=Application
	Categories=HamRadio
	
EOF

	sudo mv ${HOME}/Downloads/qdmr.desktop /usr/share/applications/
	sudo mv /usr/share/icons/hicolor/32x32/qdmr.png /usr/share/pixmaps/qdmr.png
	
}

##################################
#	Repeater-Start
##################################
REPEAT(){
sudo apt install -y gir1.2-osmgpsmap-1.0 gir1.2-geoclue-2.0 libosmgpsmap-1.0-1
REPEAT_LATEST=$(curl -s https://sourceforge.net/projects/repeater-start/files/ | grep all.deb | head -1 | sed 's/.*repeater/repeater/;s/".*//')
cd ${HOME}/Downloads
wget https://sourceforge.net/projects/repeater-start/files/$REPEAT_LATEST
sudo dpkg -i $REPEAT_LATEST
}

